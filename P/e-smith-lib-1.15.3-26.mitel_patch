diff -Nur -x '*.orig' -x '*.rej' e-smith-lib-1.15.3/root/usr/lib/perl5/site_perl/esmith/event.pm mezzanine_patched_e-smith-lib-1.15.3/root/usr/lib/perl5/site_perl/esmith/event.pm
--- e-smith-lib-1.15.3/root/usr/lib/perl5/site_perl/esmith/event.pm	2005-02-02 12:40:11.000000000 -0500
+++ mezzanine_patched_e-smith-lib-1.15.3/root/usr/lib/perl5/site_perl/esmith/event.pm	2005-12-01 10:24:50.660712000 -0500
@@ -1,5 +1,5 @@
 #----------------------------------------------------------------------
-# Copyright 1999-2003 Mitel Networks Corporation
+# Copyright 1999-2005 Mitel Networks Corporation
 # This program is free software; you can redistribute it and/or
 # modify it under the same terms as Perl itself.
 #----------------------------------------------------------------------
@@ -11,6 +11,8 @@
 use Time::HiRes qw( usleep ualarm gettimeofday tv_interval );
 use esmith::Logger;
 use File::Basename;
+use File::Temp qw/ :mktemp /;
+use esmith::ConfigDB;
 
 =pod
 
@@ -120,6 +122,38 @@
         $log .= "|Status|$status" if $status;
         print LOG $log;
     }
+
+    # Implement event queuing for clustered systems. If the EventQ dir
+    # exists, it should be populated with subdirs named after the IP of
+    # each memeber node. Event files queued here are processed by the 
+    # Mitel replication handler and removed.
+    my $qdir = "/home/e-smith/EventQ";
+    if(-d $qdir)
+    {
+        # Ensure we aren't called by a cascaded event. We only need to
+        # queue the top-level of such a beast.
+        my $ppid = getppid();
+        open F, "/proc/$ppid/cmdline";
+        my $cmd = <F>;
+        close F;
+        unless($cmd =~ "/etc/e-smith/event")
+        {
+            my $confdb = esmith::ConfigDB->open_ro;
+            my $addr = $confdb->get('LocalIP')->value;
+            print LOG "Queuing event $event for replication";
+            opendir DIR, $qdir;
+            my @dirs = grep(!/^\./, readdir(DIR));
+            closedir DIR;
+            foreach my $dir (@dirs)
+            {
+                next if $dir eq $addr;
+                my ($fh, $fname) = mkstemp("$qdir/$dir/evtXXXXXX");
+                print $fh join(" ", $event, @args);
+                close $fh;
+            }
+        }
+    }
+
     return $exitcode;
 }
 
